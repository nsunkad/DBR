syntax = "proto3";

package database;

service Database {
  rpc SayHello (HelloRequest) returns (HelloReply);
  rpc Get (GetRequest) returns (GetReply);
  rpc Set (SetRequest) returns (SetReply);
  rpc BatchGet (BatchGetRequest) returns (BatchGetReply);
  rpc BatchSet (BatchSetRequest) returns (BatchSetReply);
}

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}

// ----- Get Request/Reply -----
//
// Get a value from the database by providing a key.
message GetRequest {
  bytes key = 1;
}

// Returned value, as raw bytes
message GetReply {
  bytes value = 1; 
}

// ----- Set Request/Reply -----
//
// Set a value in the database for a given key.
message SetRequest {
  bytes key = 1;   // key must be 8 bytes
  bytes value = 2; // value to be stored
}

// indicates if the set operation was successful
message SetReply {
  bool success = 1;
}

// ----- BatchGet Request/Reply -----
//
// Retrieve multiple key-value pairs by providing multiple keys.
message BatchGetRequest {
  repeated bytes keys = 1; // list of keys to retrieve
}

message BatchGetReply {
  repeated KeyValue pairs = 1; // retrieved key-value pairs
}

// ----- BatchSet Request/Reply -----
//
// Set multiple key-value pairs in a single operation.
message BatchSetRequest {
  repeated KeyValue pairs = 1; // list of key-value pairs to set
}

message BatchSetReply {
  bool success = 1; // indicates if the batch set operation was successful
}

// ----- Key-Value Pair -----
//
// A simple message to hold a key-value pair.
message KeyValue {
  bytes key = 1;   // key must be 8 bytes
  bytes value = 2; // corresponding value
}
