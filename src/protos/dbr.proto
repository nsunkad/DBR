syntax = "proto3";

package generated;

// used for KeyValue 
import "database.proto";

enum DBRStatus {
    // necessary in proto3
    DBR_UNKNOWN = 0;
    DBR_CREATED = 1;
    DBR_RUNNING = 2;
    DBR_SUCCESS = 3;
    DBR_FAILED = 4; 
}

service DBRMsg {
    rpc Send (DBReq) returns (DBRReply);
    rpc Schedule (DBReq) returns (DBRReply);
}

enum QueryStatus {
   // necessary in proto3
   QUERY_UNKNOWN = 0;
   QUERY_CREATED = 1;
   QUERY_RUNNING = 2;
   QUERY_SUCCESS = 3;
   QUERY_FAILED = 4;
}

message DBRReply {
    bool success = 1;
}

message GetQuery {
    string id = 1;
    QueryStatus status = 2;
    bytes key = 3;
}

message SetQuery {
    string id = 1;
    QueryStatus status = 2;
    bytes key = 3;
    bytes value = 4;
}
message Query {
   oneof query_type {
      GetQuery get_query = 1;
      SetQuery set_query = 2;
   }
}

message DBReq {
    string id = 1;
    string name = 2;
    DBRStatus status = 3;

    repeated Query queries = 4;    

    string predecessor_location = 5;
    DBReq successor = 6;

    // KeyValue comes from "database.proto"
    repeated KeyValue environment = 7;

    // serialized business logic in between DBRs
    optional bytes logic_function = 8;

    // when sending DBR to orchestration 
    // app layer doesn't know location
    optional string location = 9;

}