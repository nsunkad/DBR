syntax = "proto3";

package generated;

import "database.proto";

enum DBRStatus {
    DBR_UNKNOWN = 0;
    DBR_CREATED = 1;
    DBR_RUNNING = 2;
    DBR_SUCCESS = 3;
    DBR_FAILED = 4; 
}

service DBReqService {
    rpc Schedule (DBReq) returns (DBRReply);
}

enum QueryStatus {
   QUERY_UNKNOWN = 0;
   QUERY_CREATED = 1;
   QUERY_RUNNING = 2;
   QUERY_SUCCESS = 3;
   QUERY_FAILED = 4;
}

message DBREnvironment {
    repeated KeyValue environment = 1;
}

message DBRReply {
    bool success = 1;
}

message GetQuery {
    string id = 1;
    QueryStatus status = 2;
    bytes key = 3;
}

message SetQuery {
    string id = 1;
    QueryStatus status = 2;
    bytes key = 3;
    bytes value = 4;
}
message Query {
   oneof query_type {
      GetQuery get_query = 1;
      SetQuery set_query = 2;
   }
}

message DBReq {
    string id = 1;
    string name = 2;
    DBRStatus status = 3;
    repeated Query queries = 4;    
    string predecessor_location = 5;
    DBReq successor = 6;
    DBREnvironment environment = 7;
    optional bytes logic_function = 8;
    optional string location = 9;
}